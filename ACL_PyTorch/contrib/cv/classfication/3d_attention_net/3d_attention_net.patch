--- model/basic_layers.py	2021-09-09 21:33:05.746378097 +0800
+++ ../Residual-Attention-Network-with_resize_autotune_optimization/model/basic_layers.py	2021-08-24 10:26:06.281714424 +0800
@@ -7,19 +7,20 @@
 
 class ResidualBlock(nn.Module):
     def __init__(self, input_channels, output_channels, stride=1):
+        tmp_output_channels = int (output_channels / 4)
         super(ResidualBlock, self).__init__()
         self.input_channels = input_channels
         self.output_channels = output_channels
         self.stride = stride
         self.bn1 = nn.BatchNorm2d(input_channels)
         self.relu = nn.ReLU(inplace=True)
-        self.conv1 = nn.Conv2d(input_channels, output_channels/4, 1, 1, bias = False)
-        self.bn2 = nn.BatchNorm2d(output_channels/4)
+        self.conv1 = nn.Conv2d(input_channels, tmp_output_channels, 1, 1, bias = False)
+        self.bn2 = nn.BatchNorm2d(tmp_output_channels)
         self.relu = nn.ReLU(inplace=True)
-        self.conv2 = nn.Conv2d(output_channels/4, output_channels/4, 3, stride, padding = 1, bias = False)
-        self.bn3 = nn.BatchNorm2d(output_channels/4)
+        self.conv2 = nn.Conv2d(tmp_output_channels, tmp_output_channels, 3, stride, padding = 1, bias = False)
+        self.bn3 = nn.BatchNorm2d(tmp_output_channels)
         self.relu = nn.ReLU(inplace=True)
-        self.conv3 = nn.Conv2d(output_channels/4, output_channels, 1, 1, bias = False)
+        self.conv3 = nn.Conv2d(tmp_output_channels, output_channels, 1, 1, bias = False)
         self.conv4 = nn.Conv2d(input_channels, output_channels , 1, stride, bias = False)
         
     def forward(self, x):
