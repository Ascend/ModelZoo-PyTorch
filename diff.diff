diff --git a/AscendIE/TorchAIE/built-in/cv/detection/DBNet_r50_OpenMMLab/README.md b/AscendIE/TorchAIE/built-in/cv/detection/DBNet_r50_OpenMMLab/README.md
index caf805ec0..806d3c9af 100644
--- a/AscendIE/TorchAIE/built-in/cv/detection/DBNet_r50_OpenMMLab/README.md
+++ b/AscendIE/TorchAIE/built-in/cv/detection/DBNet_r50_OpenMMLab/README.md
@@ -12,6 +12,7 @@
 本模块展现的是针对openmmlab中开发的DBNet_r50模型进行了适配的昇腾pytorch插件的样例。本样例展现了如何使用mmdeploy将DBNet进行转换并通过昇腾pytorch插件将其赋予昇腾推理引擎的能力并在npu上高性能地运行。
 - 模型链接
     ```
+    url=https://github.com/open-mmlab/mmocr
     url=https://github.com/open-mmlab/mmocr/blob/main/configs/textdet/dbnet/README.md
     ```
 - 模型对应配置文件
@@ -34,16 +35,39 @@
 ## 环境准备 <a name="ENV_PREPARE"></a>
 | 配套                   | 版本            | 
 |-----------------------|-----------------| 
-| CANN                  | 6.3.RC2.alph002 | 链接                                                          |
-| Python                | 3.9.0           |                                                           
-| PyTorch               | 2.0.0           |
-| torchVison            | 0.15.1          |-
-| Ascend-cann-torch-aie | --
-| Ascend-cann-aie       | --
+| CANN                  | 6.3.RC2.alph002 |
+| Python                | 3.9        |                                                           
+| Torch+cpu             | 2.0.1           |
+| torchVison            | 0.15.2          |
+| conda                 | 23.5.2          |
+| Ascend-cann-torch-aie | --              |
+| Ascend-cann-aie       | --              |
 | 芯片类型               | Ascend310P3     |
 ### 配置OpenMMLab运行环境
-根据OpenMMLab仓库mmdeploy中的get_started.md配置mmdeploy仓库。
-进入配置的mmdeploy地址并在当前路径下下载对应mmocr和mmcv（cpu版）代码仓。
+#### 环境配置步骤
+首先需要配置mmocr运行环境。安装环境前需要自行下载安装conda并配好权限和环境。接着按照mmocr安装说明进行安装，这里安装时需要自行按照提示补齐缺少的库：
+  ```
+  conda create -n open-mmlab python=3.9 pytorch=2.0.1 torchvision -c pytorch -y
+  conda activate open-mmlab
+  pip3 install openmim
+  git clone https://github.com/open-mmlab/mmocr.git
+  cd mmocr
+  mim install -e .
+  pip install mmdeploy==1.2.0
+  ```
+接着我们需要配置mmdeploy才能将模型迁移到torchscript上。这里我们在mmocr同级路径下下载mmdeploy仓。而后我们需要为DBNet中无法直接trace的自定义算子（mmdeploy::modulated_deform_conv）构建torchscript算子：
+  ```
+  git clone https://github.com/open-mmlab/mmdeploy.git
+  cd mmdeploy
+  mkdir -p build && cd build
+  cmake -DCMAKE_CXX_COMPILER=g++-9 -DMMDEPLOY_TARGET_BACKENDS=torchscript -DTorch_DIR=${Torch_DIR} ..
+  make -j$(nproc) && make install
+  ```
+#### 参考链接
+  ```
+  url=https://github.com/open-mmlab/mmocr/blob/main/README_zh-CN.md
+  url=https://github.com/open-mmlab/mmdeploy/blob/main/docs/en/01-how-to-build/linux-x86_64.md
+  ```
 
 ### 配置昇腾运行环境
 下载对应版本的昇腾产品
@@ -71,9 +95,18 @@ pip3 install torch-aie-6.3.T200-linux_aarch64.whl
 ```
 
 ### 准备脚本与必要文件
-在本地的mmdeploy地址下载本代码仓中dbnet_compile_run.py和env.sh脚本和模型权重文件。
+在本地的mmdeploy地址下载本代码仓中dbnet_compile_run.py脚本和模型权重文件。
+- 关键路径
+  ```
+   ├── work_dir
+   |   ├── mmdeploy
+   |   |    ├── dbnet_sample.py
+   │   |    ├── {MODEL_WEIGHT_FILE}.pt
+   │   |    ├── ......
+   |   ├── mmocr
+  ```
 
-## 准备数据集 <a name="DATASET_PREPARE"></a>>
+## 准备数据集 <a name="DATASET_PREPARE"></a>
 clone了mmocr仓后执行下面命令
 ```
   cd mmocr
@@ -93,14 +126,12 @@ clone了mmocr仓后执行下面命令
 
 - trace并compile 并运行 AIE模型
   ```
-    source env.sh
-    python dbnet_compile_run.py --trace_compile
+    python dbnet_compile_run.py --dataset_root 数据集路径 --trace_compile
   ```
 
 - load 并运行 AIE模型
   ```
-    source env.sh
-    python dbnet_compile_run.py
+    python dbnet_compile_run.py --dataset_root 数据集路径
   ```
 
 ## 模型推理性能&精度 <a name="INFER_PERFORM"></a>
